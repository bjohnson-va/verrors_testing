package verrors_testing

import (
	"github.com/vendasta/gosdks/verrors"
	"math/rand"
	"time"
)

func RandomVError() verrors.ServiceError {
	// TODO: More futureproof implementation (i.e. handle new additions)
	rand.Seed(time.Now().Unix())
	t := rand.Int63n(int64(verrors.BadGateway))
	return verrors.New(verrors.ErrorType(t), "Random vError generated by verrors_testing")
}

func RandomVErrorExcept(not verrors.ErrorType) error {
	for {
		// TODO: There's almost certainly a way to do this that doesn't involve an infinite loop of retries
		err := RandomVError()
		if err.ErrorType() == not {
			continue
		}
		return err
	}
}
