package verrors_testing

import (
	"github.com/vendasta/gosdks/verrors"
	"math/rand"
	"time"
)

func RandomVError() verrors.ServiceError {
	// TODO: More futureproof implementation (i.e. handle new additions)
	rand.Seed(time.Now().Unix())
	t := rand.Int63n(int64(verrors.BadGateway))
	return verrors.New(verrors.ErrorType(t), "Random vError generated by verrors_testing")
}

func RandomVErrorExcept(not ...verrors.ErrorType) verrors.ServiceError {
	Choose:
		for {
			// TODO: There's almost certainly a way to do this that doesn't involve an infinite loop of retries
			err := RandomVError()
			for _, e := range not {
				if err.ErrorType() == e {
					continue Choose
				}
			}
			return err
		}
}
